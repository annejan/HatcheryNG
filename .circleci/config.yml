# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:5.7-ram
        environment:
          - MYSQL_ROOT_PASSWORD=

    steps:
      - checkout
      - run: cp .env.testing .env

      - run: sudo apt update
      - run: sudo apt-get install -y libpng-dev libgmp-dev git
      - run: sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
      - run: sudo docker-php-ext-install zip pdo_mysql gd gmp exif pcntl
      - run: sudo apt-get install mariadb-client pyflakes iverilog arachne-pnr arachne-pnr-chipdb fpga-icestorm fpga-icestorm-chipdb

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # Build frontend
      - run: yarn build

      # prepare the database
      - run: mysqladmin create hatchery_test --user="root" --host="127.0.0.1"
      - run: php artisan key:generate --env=testing
      - run: php artisan migrate --env=testing --force --seed
      - run: php artisan config:clear
      - run: php artisan route:clear

      # run tests with codecept
      - run: vendor/bin/codecept build
      - run: vendor/bin/codecept run --xml result.xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
